# Generated from C.g4 by ANTLR 4.7.2
from antlr4 import *
from io import StringIO
from typing.io import TextIO
import sys



def serializedATN():
    with StringIO() as buf:
        buf.write("\3\u608b\ua72a\u8133\ub9ed\u417c\u3be7\u7786\u5964\2=")
        buf.write("\u01d0\b\1\4\2\t\2\4\3\t\3\4\4\t\4\4\5\t\5\4\6\t\6\4\7")
        buf.write("\t\7\4\b\t\b\4\t\t\t\4\n\t\n\4\13\t\13\4\f\t\f\4\r\t\r")
        buf.write("\4\16\t\16\4\17\t\17\4\20\t\20\4\21\t\21\4\22\t\22\4\23")
        buf.write("\t\23\4\24\t\24\4\25\t\25\4\26\t\26\4\27\t\27\4\30\t\30")
        buf.write("\4\31\t\31\4\32\t\32\4\33\t\33\4\34\t\34\4\35\t\35\4\36")
        buf.write("\t\36\4\37\t\37\4 \t \4!\t!\4\"\t\"\4#\t#\4$\t$\4%\t%")
        buf.write("\4&\t&\4\'\t\'\4(\t(\4)\t)\4*\t*\4+\t+\4,\t,\4-\t-\4.")
        buf.write("\t.\4/\t/\4\60\t\60\4\61\t\61\4\62\t\62\4\63\t\63\4\64")
        buf.write("\t\64\4\65\t\65\4\66\t\66\4\67\t\67\48\t8\49\t9\4:\t:")
        buf.write("\4;\t;\4<\t<\4=\t=\4>\t>\4?\t?\4@\t@\4A\tA\4B\tB\4C\t")
        buf.write("C\4D\tD\3\2\3\2\3\3\3\3\3\4\3\4\3\5\3\5\3\6\3\6\3\7\3")
        buf.write("\7\3\7\3\b\3\b\3\b\3\t\3\t\3\n\3\n\3\13\3\13\3\f\3\f\3")
        buf.write("\r\3\r\3\16\3\16\3\17\3\17\3\20\3\20\3\21\3\21\3\22\3")
        buf.write("\22\3\22\3\23\3\23\3\23\3\24\3\24\3\24\3\25\3\25\3\25")
        buf.write("\3\26\3\26\3\26\3\27\3\27\3\27\3\30\3\30\3\31\3\31\3\32")
        buf.write("\3\32\3\33\3\33\3\33\3\34\3\34\3\34\3\35\3\35\3\35\3\36")
        buf.write("\3\36\3\36\3\37\3\37\3\37\3\37\3 \3 \3!\3!\3\"\3\"\3\"")
        buf.write("\3#\3#\3#\3#\3#\3#\3#\3#\3#\3#\3#\3#\3#\3#\3#\3#\3#\3")
        buf.write("#\3#\3$\3$\3$\3$\3$\3%\3%\3%\3%\3&\3&\3&\3&\3&\3&\3&\3")
        buf.write("\'\3\'\3\'\3\'\3\'\3\'\3(\3(\3(\3(\3(\3)\3)\3)\3*\3*\3")
        buf.write("*\3*\3*\3+\3+\3+\3+\3,\3,\3,\3,\3,\3-\3-\3-\3-\3-\3-\3")
        buf.write(".\3.\3.\3.\3.\3.\3.\3/\3/\3/\3/\3/\3/\3\60\3\60\3\60\3")
        buf.write("\60\3\60\3\60\3\60\3\60\3\61\3\61\3\61\3\61\3\61\3\61")
        buf.write("\3\61\3\61\3\61\3\62\3\62\3\62\3\62\3\62\3\62\3\62\3\63")
        buf.write("\3\63\3\63\3\63\3\63\3\64\3\64\3\65\3\65\3\66\3\66\3\67")
        buf.write("\3\67\38\38\58\u0154\n8\38\68\u0157\n8\r8\168\u0158\3")
        buf.write("9\39\39\39\39\39\39\39\39\39\39\39\39\39\39\39\39\39\3")
        buf.write("9\39\39\39\59\u0171\n9\3:\3:\3:\7:\u0176\n:\f:\16:\u0179")
        buf.write("\13:\3;\3;\5;\u017d\n;\3<\5<\u0180\n<\3<\6<\u0183\n<\r")
        buf.write("<\16<\u0184\3=\7=\u0188\n=\f=\16=\u018b\13=\3=\3=\6=\u018f")
        buf.write("\n=\r=\16=\u0190\3=\5=\u0194\n=\3=\6=\u0197\n=\r=\16=")
        buf.write("\u0198\3=\3=\5=\u019d\n=\5=\u019f\n=\3>\3>\3>\3>\3?\3")
        buf.write("?\5?\u01a7\n?\3@\3@\7@\u01ab\n@\f@\16@\u01ae\13@\3@\3")
        buf.write("@\3A\3A\3A\3A\7A\u01b6\nA\fA\16A\u01b9\13A\3A\3A\3A\3")
        buf.write("A\3A\3B\3B\3B\3B\7B\u01c4\nB\fB\16B\u01c7\13B\3B\3B\3")
        buf.write("C\3C\3C\3C\3D\3D\4\u01ac\u01b7\2E\3\3\5\4\7\5\t\6\13\7")
        buf.write("\r\b\17\t\21\n\23\13\25\f\27\r\31\16\33\17\35\20\37\21")
        buf.write("!\22#\23%\24\'\25)\26+\27-\30/\31\61\32\63\33\65\34\67")
        buf.write("\359\36;\37= ?!A\"C#E$G%I&K\'M(O)Q*S+U,W-Y.[/]\60_\61")
        buf.write("a\62c\63e\64g\2i\2k\2m\2o\2q\2s\65u\2w\66y\67{8}\2\177")
        buf.write("9\u0081:\u0083;\u0085<\u0087=\3\2\13\5\2C\\aac|\3\2\62")
        buf.write(";\3\2\63;\4\2--//\4\2GGgg\5\2\f\f))^^\5\2\f\f$$^^\4\2")
        buf.write("\f\f\17\17\5\2\13\f\17\17\"\"\2\u01e2\2\3\3\2\2\2\2\5")
        buf.write("\3\2\2\2\2\7\3\2\2\2\2\t\3\2\2\2\2\13\3\2\2\2\2\r\3\2")
        buf.write("\2\2\2\17\3\2\2\2\2\21\3\2\2\2\2\23\3\2\2\2\2\25\3\2\2")
        buf.write("\2\2\27\3\2\2\2\2\31\3\2\2\2\2\33\3\2\2\2\2\35\3\2\2\2")
        buf.write("\2\37\3\2\2\2\2!\3\2\2\2\2#\3\2\2\2\2%\3\2\2\2\2\'\3\2")
        buf.write("\2\2\2)\3\2\2\2\2+\3\2\2\2\2-\3\2\2\2\2/\3\2\2\2\2\61")
        buf.write("\3\2\2\2\2\63\3\2\2\2\2\65\3\2\2\2\2\67\3\2\2\2\29\3\2")
        buf.write("\2\2\2;\3\2\2\2\2=\3\2\2\2\2?\3\2\2\2\2A\3\2\2\2\2C\3")
        buf.write("\2\2\2\2E\3\2\2\2\2G\3\2\2\2\2I\3\2\2\2\2K\3\2\2\2\2M")
        buf.write("\3\2\2\2\2O\3\2\2\2\2Q\3\2\2\2\2S\3\2\2\2\2U\3\2\2\2\2")
        buf.write("W\3\2\2\2\2Y\3\2\2\2\2[\3\2\2\2\2]\3\2\2\2\2_\3\2\2\2")
        buf.write("\2a\3\2\2\2\2c\3\2\2\2\2e\3\2\2\2\2s\3\2\2\2\2w\3\2\2")
        buf.write("\2\2y\3\2\2\2\2{\3\2\2\2\2\177\3\2\2\2\2\u0081\3\2\2\2")
        buf.write("\2\u0083\3\2\2\2\2\u0085\3\2\2\2\2\u0087\3\2\2\2\3\u0089")
        buf.write("\3\2\2\2\5\u008b\3\2\2\2\7\u008d\3\2\2\2\t\u008f\3\2\2")
        buf.write("\2\13\u0091\3\2\2\2\r\u0093\3\2\2\2\17\u0096\3\2\2\2\21")
        buf.write("\u0099\3\2\2\2\23\u009b\3\2\2\2\25\u009d\3\2\2\2\27\u009f")
        buf.write("\3\2\2\2\31\u00a1\3\2\2\2\33\u00a3\3\2\2\2\35\u00a5\3")
        buf.write("\2\2\2\37\u00a7\3\2\2\2!\u00a9\3\2\2\2#\u00ab\3\2\2\2")
        buf.write("%\u00ae\3\2\2\2\'\u00b1\3\2\2\2)\u00b4\3\2\2\2+\u00b7")
        buf.write("\3\2\2\2-\u00ba\3\2\2\2/\u00bd\3\2\2\2\61\u00bf\3\2\2")
        buf.write("\2\63\u00c1\3\2\2\2\65\u00c3\3\2\2\2\67\u00c6\3\2\2\2")
        buf.write("9\u00c9\3\2\2\2;\u00cc\3\2\2\2=\u00cf\3\2\2\2?\u00d3\3")
        buf.write("\2\2\2A\u00d5\3\2\2\2C\u00d7\3\2\2\2E\u00da\3\2\2\2G\u00ed")
        buf.write("\3\2\2\2I\u00f2\3\2\2\2K\u00f6\3\2\2\2M\u00fd\3\2\2\2")
        buf.write("O\u0103\3\2\2\2Q\u0108\3\2\2\2S\u010b\3\2\2\2U\u0110\3")
        buf.write("\2\2\2W\u0114\3\2\2\2Y\u0119\3\2\2\2[\u011f\3\2\2\2]\u0126")
        buf.write("\3\2\2\2_\u012c\3\2\2\2a\u0134\3\2\2\2c\u013d\3\2\2\2")
        buf.write("e\u0144\3\2\2\2g\u0149\3\2\2\2i\u014b\3\2\2\2k\u014d\3")
        buf.write("\2\2\2m\u014f\3\2\2\2o\u0151\3\2\2\2q\u0170\3\2\2\2s\u0172")
        buf.write("\3\2\2\2u\u017c\3\2\2\2w\u017f\3\2\2\2y\u019e\3\2\2\2")
        buf.write("{\u01a0\3\2\2\2}\u01a6\3\2\2\2\177\u01a8\3\2\2\2\u0081")
        buf.write("\u01b1\3\2\2\2\u0083\u01bf\3\2\2\2\u0085\u01ca\3\2\2\2")
        buf.write("\u0087\u01ce\3\2\2\2\u0089\u008a\7*\2\2\u008a\4\3\2\2")
        buf.write("\2\u008b\u008c\7+\2\2\u008c\6\3\2\2\2\u008d\u008e\7]\2")
        buf.write("\2\u008e\b\3\2\2\2\u008f\u0090\7_\2\2\u0090\n\3\2\2\2")
        buf.write("\u0091\u0092\7.\2\2\u0092\f\3\2\2\2\u0093\u0094\7-\2\2")
        buf.write("\u0094\u0095\7-\2\2\u0095\16\3\2\2\2\u0096\u0097\7/\2")
        buf.write("\2\u0097\u0098\7/\2\2\u0098\20\3\2\2\2\u0099\u009a\7,")
        buf.write("\2\2\u009a\22\3\2\2\2\u009b\u009c\7(\2\2\u009c\24\3\2")
        buf.write("\2\2\u009d\u009e\7-\2\2\u009e\26\3\2\2\2\u009f\u00a0\7")
        buf.write("/\2\2\u00a0\30\3\2\2\2\u00a1\u00a2\7#\2\2\u00a2\32\3\2")
        buf.write("\2\2\u00a3\u00a4\7\61\2\2\u00a4\34\3\2\2\2\u00a5\u00a6")
        buf.write("\7\'\2\2\u00a6\36\3\2\2\2\u00a7\u00a8\7>\2\2\u00a8 \3")
        buf.write("\2\2\2\u00a9\u00aa\7@\2\2\u00aa\"\3\2\2\2\u00ab\u00ac")
        buf.write("\7>\2\2\u00ac\u00ad\7?\2\2\u00ad$\3\2\2\2\u00ae\u00af")
        buf.write("\7@\2\2\u00af\u00b0\7?\2\2\u00b0&\3\2\2\2\u00b1\u00b2")
        buf.write("\7?\2\2\u00b2\u00b3\7?\2\2\u00b3(\3\2\2\2\u00b4\u00b5")
        buf.write("\7#\2\2\u00b5\u00b6\7?\2\2\u00b6*\3\2\2\2\u00b7\u00b8")
        buf.write("\7(\2\2\u00b8\u00b9\7(\2\2\u00b9,\3\2\2\2\u00ba\u00bb")
        buf.write("\7~\2\2\u00bb\u00bc\7~\2\2\u00bc.\3\2\2\2\u00bd\u00be")
        buf.write("\7A\2\2\u00be\60\3\2\2\2\u00bf\u00c0\7<\2\2\u00c0\62\3")
        buf.write("\2\2\2\u00c1\u00c2\7?\2\2\u00c2\64\3\2\2\2\u00c3\u00c4")
        buf.write("\7,\2\2\u00c4\u00c5\7?\2\2\u00c5\66\3\2\2\2\u00c6\u00c7")
        buf.write("\7\61\2\2\u00c7\u00c8\7?\2\2\u00c88\3\2\2\2\u00c9\u00ca")
        buf.write("\7-\2\2\u00ca\u00cb\7?\2\2\u00cb:\3\2\2\2\u00cc\u00cd")
        buf.write("\7/\2\2\u00cd\u00ce\7?\2\2\u00ce<\3\2\2\2\u00cf\u00d0")
        buf.write("\7\60\2\2\u00d0\u00d1\7\60\2\2\u00d1\u00d2\7\60\2\2\u00d2")
        buf.write(">\3\2\2\2\u00d3\u00d4\7}\2\2\u00d4@\3\2\2\2\u00d5\u00d6")
        buf.write("\7\177\2\2\u00d6B\3\2\2\2\u00d7\u00d8\7.\2\2\u00d8\u00d9")
        buf.write("\7\177\2\2\u00d9D\3\2\2\2\u00da\u00db\7%\2\2\u00db\u00dc")
        buf.write("\7k\2\2\u00dc\u00dd\7p\2\2\u00dd\u00de\7e\2\2\u00de\u00df")
        buf.write("\7n\2\2\u00df\u00e0\7w\2\2\u00e0\u00e1\7f\2\2\u00e1\u00e2")
        buf.write("\7g\2\2\u00e2\u00e3\7\"\2\2\u00e3\u00e4\7>\2\2\u00e4\u00e5")
        buf.write("\7u\2\2\u00e5\u00e6\7v\2\2\u00e6\u00e7\7f\2\2\u00e7\u00e8")
        buf.write("\7k\2\2\u00e8\u00e9\7q\2\2\u00e9\u00ea\7\60\2\2\u00ea")
        buf.write("\u00eb\7j\2\2\u00eb\u00ec\7@\2\2\u00ecF\3\2\2\2\u00ed")
        buf.write("\u00ee\7e\2\2\u00ee\u00ef\7j\2\2\u00ef\u00f0\7c\2\2\u00f0")
        buf.write("\u00f1\7t\2\2\u00f1H\3\2\2\2\u00f2\u00f3\7k\2\2\u00f3")
        buf.write("\u00f4\7p\2\2\u00f4\u00f5\7v\2\2\u00f5J\3\2\2\2\u00f6")
        buf.write("\u00f7\7f\2\2\u00f7\u00f8\7q\2\2\u00f8\u00f9\7w\2\2\u00f9")
        buf.write("\u00fa\7d\2\2\u00fa\u00fb\7n\2\2\u00fb\u00fc\7g\2\2\u00fc")
        buf.write("L\3\2\2\2\u00fd\u00fe\7h\2\2\u00fe\u00ff\7n\2\2\u00ff")
        buf.write("\u0100\7q\2\2\u0100\u0101\7c\2\2\u0101\u0102\7v\2\2\u0102")
        buf.write("N\3\2\2\2\u0103\u0104\7x\2\2\u0104\u0105\7q\2\2\u0105")
        buf.write("\u0106\7k\2\2\u0106\u0107\7f\2\2\u0107P\3\2\2\2\u0108")
        buf.write("\u0109\7k\2\2\u0109\u010a\7h\2\2\u010aR\3\2\2\2\u010b")
        buf.write("\u010c\7g\2\2\u010c\u010d\7n\2\2\u010d\u010e\7u\2\2\u010e")
        buf.write("\u010f\7g\2\2\u010fT\3\2\2\2\u0110\u0111\7h\2\2\u0111")
        buf.write("\u0112\7q\2\2\u0112\u0113\7t\2\2\u0113V\3\2\2\2\u0114")
        buf.write("\u0115\7i\2\2\u0115\u0116\7q\2\2\u0116\u0117\7v\2\2\u0117")
        buf.write("\u0118\7q\2\2\u0118X\3\2\2\2\u0119\u011a\7y\2\2\u011a")
        buf.write("\u011b\7j\2\2\u011b\u011c\7k\2\2\u011c\u011d\7n\2\2\u011d")
        buf.write("\u011e\7g\2\2\u011eZ\3\2\2\2\u011f\u0120\7u\2\2\u0120")
        buf.write("\u0121\7y\2\2\u0121\u0122\7k\2\2\u0122\u0123\7v\2\2\u0123")
        buf.write("\u0124\7e\2\2\u0124\u0125\7j\2\2\u0125\\\3\2\2\2\u0126")
        buf.write("\u0127\7d\2\2\u0127\u0128\7t\2\2\u0128\u0129\7g\2\2\u0129")
        buf.write("\u012a\7c\2\2\u012a\u012b\7m\2\2\u012b^\3\2\2\2\u012c")
        buf.write("\u012d\7f\2\2\u012d\u012e\7g\2\2\u012e\u012f\7h\2\2\u012f")
        buf.write("\u0130\7c\2\2\u0130\u0131\7w\2\2\u0131\u0132\7n\2\2\u0132")
        buf.write("\u0133\7v\2\2\u0133`\3\2\2\2\u0134\u0135\7e\2\2\u0135")
        buf.write("\u0136\7q\2\2\u0136\u0137\7p\2\2\u0137\u0138\7v\2\2\u0138")
        buf.write("\u0139\7k\2\2\u0139\u013a\7p\2\2\u013a\u013b\7w\2\2\u013b")
        buf.write("\u013c\7g\2\2\u013cb\3\2\2\2\u013d\u013e\7t\2\2\u013e")
        buf.write("\u013f\7g\2\2\u013f\u0140\7v\2\2\u0140\u0141\7w\2\2\u0141")
        buf.write("\u0142\7t\2\2\u0142\u0143\7p\2\2\u0143d\3\2\2\2\u0144")
        buf.write("\u0145\7e\2\2\u0145\u0146\7c\2\2\u0146\u0147\7u\2\2\u0147")
        buf.write("\u0148\7g\2\2\u0148f\3\2\2\2\u0149\u014a\t\2\2\2\u014a")
        buf.write("h\3\2\2\2\u014b\u014c\t\3\2\2\u014cj\3\2\2\2\u014d\u014e")
        buf.write("\t\4\2\2\u014el\3\2\2\2\u014f\u0150\t\5\2\2\u0150n\3\2")
        buf.write("\2\2\u0151\u0153\t\6\2\2\u0152\u0154\5m\67\2\u0153\u0152")
        buf.write("\3\2\2\2\u0153\u0154\3\2\2\2\u0154\u0156\3\2\2\2\u0155")
        buf.write("\u0157\5i\65\2\u0156\u0155\3\2\2\2\u0157\u0158\3\2\2\2")
        buf.write("\u0158\u0156\3\2\2\2\u0158\u0159\3\2\2\2\u0159p\3\2\2")
        buf.write("\2\u015a\u015b\7^\2\2\u015b\u0171\7)\2\2\u015c\u015d\7")
        buf.write("^\2\2\u015d\u0171\7$\2\2\u015e\u015f\7^\2\2\u015f\u0171")
        buf.write("\7A\2\2\u0160\u0161\7^\2\2\u0161\u0171\7^\2\2\u0162\u0163")
        buf.write("\7^\2\2\u0163\u0171\7c\2\2\u0164\u0165\7^\2\2\u0165\u0171")
        buf.write("\7d\2\2\u0166\u0167\7^\2\2\u0167\u0171\7h\2\2\u0168\u0169")
        buf.write("\7^\2\2\u0169\u0171\7p\2\2\u016a\u016b\7^\2\2\u016b\u0171")
        buf.write("\7t\2\2\u016c\u016d\7^\2\2\u016d\u0171\7v\2\2\u016e\u016f")
        buf.write("\7^\2\2\u016f\u0171\7x\2\2\u0170\u015a\3\2\2\2\u0170\u015c")
        buf.write("\3\2\2\2\u0170\u015e\3\2\2\2\u0170\u0160\3\2\2\2\u0170")
        buf.write("\u0162\3\2\2\2\u0170\u0164\3\2\2\2\u0170\u0166\3\2\2\2")
        buf.write("\u0170\u0168\3\2\2\2\u0170\u016a\3\2\2\2\u0170\u016c\3")
        buf.write("\2\2\2\u0170\u016e\3\2\2\2\u0171r\3\2\2\2\u0172\u0177")
        buf.write("\5g\64\2\u0173\u0176\5g\64\2\u0174\u0176\5i\65\2\u0175")
        buf.write("\u0173\3\2\2\2\u0175\u0174\3\2\2\2\u0176\u0179\3\2\2\2")
        buf.write("\u0177\u0175\3\2\2\2\u0177\u0178\3\2\2\2\u0178t\3\2\2")
        buf.write("\2\u0179\u0177\3\2\2\2\u017a\u017d\n\7\2\2\u017b\u017d")
        buf.write("\5q9\2\u017c\u017a\3\2\2\2\u017c\u017b\3\2\2\2\u017dv")
        buf.write("\3\2\2\2\u017e\u0180\5m\67\2\u017f\u017e\3\2\2\2\u017f")
        buf.write("\u0180\3\2\2\2\u0180\u0182\3\2\2\2\u0181\u0183\5i\65\2")
        buf.write("\u0182\u0181\3\2\2\2\u0183\u0184\3\2\2\2\u0184\u0182\3")
        buf.write("\2\2\2\u0184\u0185\3\2\2\2\u0185x\3\2\2\2\u0186\u0188")
        buf.write("\5i\65\2\u0187\u0186\3\2\2\2\u0188\u018b\3\2\2\2\u0189")
        buf.write("\u0187\3\2\2\2\u0189\u018a\3\2\2\2\u018a\u018c\3\2\2\2")
        buf.write("\u018b\u0189\3\2\2\2\u018c\u018e\7\60\2\2\u018d\u018f")
        buf.write("\5i\65\2\u018e\u018d\3\2\2\2\u018f\u0190\3\2\2\2\u0190")
        buf.write("\u018e\3\2\2\2\u0190\u0191\3\2\2\2\u0191\u0193\3\2\2\2")
        buf.write("\u0192\u0194\5o8\2\u0193\u0192\3\2\2\2\u0193\u0194\3\2")
        buf.write("\2\2\u0194\u019f\3\2\2\2\u0195\u0197\5i\65\2\u0196\u0195")
        buf.write("\3\2\2\2\u0197\u0198\3\2\2\2\u0198\u0196\3\2\2\2\u0198")
        buf.write("\u0199\3\2\2\2\u0199\u019a\3\2\2\2\u019a\u019c\7\60\2")
        buf.write("\2\u019b\u019d\5o8\2\u019c\u019b\3\2\2\2\u019c\u019d\3")
        buf.write("\2\2\2\u019d\u019f\3\2\2\2\u019e\u0189\3\2\2\2\u019e\u0196")
        buf.write("\3\2\2\2\u019fz\3\2\2\2\u01a0\u01a1\7)\2\2\u01a1\u01a2")
        buf.write("\5u;\2\u01a2\u01a3\7)\2\2\u01a3|\3\2\2\2\u01a4\u01a7\n")
        buf.write("\b\2\2\u01a5\u01a7\5q9\2\u01a6\u01a4\3\2\2\2\u01a6\u01a5")
        buf.write("\3\2\2\2\u01a7~\3\2\2\2\u01a8\u01ac\7$\2\2\u01a9\u01ab")
        buf.write("\5}?\2\u01aa\u01a9\3\2\2\2\u01ab\u01ae\3\2\2\2\u01ac\u01ad")
        buf.write("\3\2\2\2\u01ac\u01aa\3\2\2\2\u01ad\u01af\3\2\2\2\u01ae")
        buf.write("\u01ac\3\2\2\2\u01af\u01b0\7$\2\2\u01b0\u0080\3\2\2\2")
        buf.write("\u01b1\u01b2\7\61\2\2\u01b2\u01b3\7,\2\2\u01b3\u01b7\3")
        buf.write("\2\2\2\u01b4\u01b6\13\2\2\2\u01b5\u01b4\3\2\2\2\u01b6")
        buf.write("\u01b9\3\2\2\2\u01b7\u01b8\3\2\2\2\u01b7\u01b5\3\2\2\2")
        buf.write("\u01b8\u01ba\3\2\2\2\u01b9\u01b7\3\2\2\2\u01ba\u01bb\7")
        buf.write(",\2\2\u01bb\u01bc\7\61\2\2\u01bc\u01bd\3\2\2\2\u01bd\u01be")
        buf.write("\bA\2\2\u01be\u0082\3\2\2\2\u01bf\u01c0\7\61\2\2\u01c0")
        buf.write("\u01c1\7\61\2\2\u01c1\u01c5\3\2\2\2\u01c2\u01c4\n\t\2")
        buf.write("\2\u01c3\u01c2\3\2\2\2\u01c4\u01c7\3\2\2\2\u01c5\u01c3")
        buf.write("\3\2\2\2\u01c5\u01c6\3\2\2\2\u01c6\u01c8\3\2\2\2\u01c7")
        buf.write("\u01c5\3\2\2\2\u01c8\u01c9\bB\2\2\u01c9\u0084\3\2\2\2")
        buf.write("\u01ca\u01cb\t\n\2\2\u01cb\u01cc\3\2\2\2\u01cc\u01cd\b")
        buf.write("C\2\2\u01cd\u0086\3\2\2\2\u01ce\u01cf\7=\2\2\u01cf\u0088")
        buf.write("\3\2\2\2\25\2\u0153\u0158\u0170\u0175\u0177\u017c\u017f")
        buf.write("\u0184\u0189\u0190\u0193\u0198\u019c\u019e\u01a6\u01ac")
        buf.write("\u01b7\u01c5\3\b\2\2")
        return buf.getvalue()


class CLexer(Lexer):

    atn = ATNDeserializer().deserialize(serializedATN())

    decisionsToDFA = [ DFA(ds, i) for i, ds in enumerate(atn.decisionToState) ]

    T__0 = 1
    T__1 = 2
    T__2 = 3
    T__3 = 4
    T__4 = 5
    T__5 = 6
    T__6 = 7
    T__7 = 8
    T__8 = 9
    T__9 = 10
    T__10 = 11
    T__11 = 12
    T__12 = 13
    T__13 = 14
    T__14 = 15
    T__15 = 16
    T__16 = 17
    T__17 = 18
    T__18 = 19
    T__19 = 20
    T__20 = 21
    T__21 = 22
    T__22 = 23
    T__23 = 24
    T__24 = 25
    T__25 = 26
    T__26 = 27
    T__27 = 28
    T__28 = 29
    T__29 = 30
    T__30 = 31
    T__31 = 32
    T__32 = 33
    IncludeStdIO = 34
    Char = 35
    Int = 36
    Double = 37
    Float = 38
    Void = 39
    If = 40
    Else = 41
    For = 42
    Goto = 43
    While = 44
    Switch = 45
    Break = 46
    Default = 47
    Continue = 48
    Return = 49
    Case = 50
    Identifier = 51
    ConstantInt = 52
    ConstantFloat = 53
    ConstantChar = 54
    StringLiteral = 55
    BlockComment = 56
    LineComment = 57
    WS = 58
    EOS = 59

    channelNames = [ u"DEFAULT_TOKEN_CHANNEL", u"HIDDEN" ]

    modeNames = [ "DEFAULT_MODE" ]

    literalNames = [ "<INVALID>",
            "'('", "')'", "'['", "']'", "','", "'++'", "'--'", "'*'", "'&'", 
            "'+'", "'-'", "'!'", "'/'", "'%'", "'<'", "'>'", "'<='", "'>='", 
            "'=='", "'!='", "'&&'", "'||'", "'?'", "':'", "'='", "'*='", 
            "'/='", "'+='", "'-='", "'...'", "'{'", "'}'", "',}'", "'#include <stdio.h>'", 
            "'char'", "'int'", "'double'", "'float'", "'void'", "'if'", 
            "'else'", "'for'", "'goto'", "'while'", "'switch'", "'break'", 
            "'default'", "'continue'", "'return'", "'case'", "';'" ]

    symbolicNames = [ "<INVALID>",
            "IncludeStdIO", "Char", "Int", "Double", "Float", "Void", "If", 
            "Else", "For", "Goto", "While", "Switch", "Break", "Default", 
            "Continue", "Return", "Case", "Identifier", "ConstantInt", "ConstantFloat", 
            "ConstantChar", "StringLiteral", "BlockComment", "LineComment", 
            "WS", "EOS" ]

    ruleNames = [ "T__0", "T__1", "T__2", "T__3", "T__4", "T__5", "T__6", 
                  "T__7", "T__8", "T__9", "T__10", "T__11", "T__12", "T__13", 
                  "T__14", "T__15", "T__16", "T__17", "T__18", "T__19", 
                  "T__20", "T__21", "T__22", "T__23", "T__24", "T__25", 
                  "T__26", "T__27", "T__28", "T__29", "T__30", "T__31", 
                  "T__32", "IncludeStdIO", "Char", "Int", "Double", "Float", 
                  "Void", "If", "Else", "For", "Goto", "While", "Switch", 
                  "Break", "Default", "Continue", "Return", "Case", "NonDigit", 
                  "Digit", "NonZeroDigit", "Sign", "ExponentPart", "EscapeSequence", 
                  "Identifier", "CChar", "ConstantInt", "ConstantFloat", 
                  "ConstantChar", "SChar", "StringLiteral", "BlockComment", 
                  "LineComment", "WS", "EOS" ]

    grammarFileName = "C.g4"

    def __init__(self, input=None, output:TextIO = sys.stdout):
        super().__init__(input, output)
        self.checkVersion("4.7.2")
        self._interp = LexerATNSimulator(self, self.atn, self.decisionsToDFA, PredictionContextCache())
        self._actions = None
        self._predicates = None


