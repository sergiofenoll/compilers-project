# Generated from C.g4 by ANTLR 4.7.2
from antlr4 import *
from io import StringIO
from typing.io import TextIO
import sys



def serializedATN():
    with StringIO() as buf:
        buf.write("\3\u608b\ua72a\u8133\ub9ed\u417c\u3be7\u7786\u5964\2>")
        buf.write("\u01d5\b\1\4\2\t\2\4\3\t\3\4\4\t\4\4\5\t\5\4\6\t\6\4\7")
        buf.write("\t\7\4\b\t\b\4\t\t\t\4\n\t\n\4\13\t\13\4\f\t\f\4\r\t\r")
        buf.write("\4\16\t\16\4\17\t\17\4\20\t\20\4\21\t\21\4\22\t\22\4\23")
        buf.write("\t\23\4\24\t\24\4\25\t\25\4\26\t\26\4\27\t\27\4\30\t\30")
        buf.write("\4\31\t\31\4\32\t\32\4\33\t\33\4\34\t\34\4\35\t\35\4\36")
        buf.write("\t\36\4\37\t\37\4 \t \4!\t!\4\"\t\"\4#\t#\4$\t$\4%\t%")
        buf.write("\4&\t&\4\'\t\'\4(\t(\4)\t)\4*\t*\4+\t+\4,\t,\4-\t-\4.")
        buf.write("\t.\4/\t/\4\60\t\60\4\61\t\61\4\62\t\62\4\63\t\63\4\64")
        buf.write("\t\64\4\65\t\65\4\66\t\66\4\67\t\67\48\t8\49\t9\4:\t:")
        buf.write("\4;\t;\4<\t<\4=\t=\4>\t>\4?\t?\4@\t@\4A\tA\4B\tB\4C\t")
        buf.write("C\4D\tD\4E\tE\3\2\3\2\3\3\3\3\3\4\3\4\3\5\3\5\3\6\3\6")
        buf.write("\3\7\3\7\3\7\3\b\3\b\3\b\3\t\3\t\3\n\3\n\3\13\3\13\3\f")
        buf.write("\3\f\3\r\3\r\3\16\3\16\3\17\3\17\3\20\3\20\3\21\3\21\3")
        buf.write("\22\3\22\3\22\3\23\3\23\3\23\3\24\3\24\3\24\3\25\3\25")
        buf.write("\3\25\3\26\3\26\3\26\3\27\3\27\3\27\3\30\3\30\3\31\3\31")
        buf.write("\3\32\3\32\3\33\3\33\3\33\3\34\3\34\3\34\3\35\3\35\3\35")
        buf.write("\3\36\3\36\3\36\3\37\3\37\3\37\3 \3 \3 \3 \3!\3!\3\"\3")
        buf.write("\"\3#\3#\3#\3$\3$\3$\3$\3$\3$\3$\3$\3$\3$\3$\3$\3$\3$")
        buf.write("\3$\3$\3$\3$\3$\3%\3%\3%\3%\3%\3&\3&\3&\3&\3\'\3\'\3\'")
        buf.write("\3\'\3\'\3\'\3\'\3(\3(\3(\3(\3(\3(\3)\3)\3)\3)\3)\3*\3")
        buf.write("*\3*\3+\3+\3+\3+\3+\3,\3,\3,\3,\3-\3-\3-\3-\3-\3.\3.\3")
        buf.write(".\3.\3.\3.\3/\3/\3/\3/\3/\3/\3/\3\60\3\60\3\60\3\60\3")
        buf.write("\60\3\60\3\61\3\61\3\61\3\61\3\61\3\61\3\61\3\61\3\62")
        buf.write("\3\62\3\62\3\62\3\62\3\62\3\62\3\62\3\62\3\63\3\63\3\63")
        buf.write("\3\63\3\63\3\63\3\63\3\64\3\64\3\64\3\64\3\64\3\65\3\65")
        buf.write("\3\66\3\66\3\67\3\67\38\38\39\39\59\u0159\n9\39\69\u015c")
        buf.write("\n9\r9\169\u015d\3:\3:\3:\3:\3:\3:\3:\3:\3:\3:\3:\3:\3")
        buf.write(":\3:\3:\3:\3:\3:\3:\3:\3:\3:\5:\u0176\n:\3;\3;\3;\7;\u017b")
        buf.write("\n;\f;\16;\u017e\13;\3<\3<\5<\u0182\n<\3=\5=\u0185\n=")
        buf.write("\3=\6=\u0188\n=\r=\16=\u0189\3>\7>\u018d\n>\f>\16>\u0190")
        buf.write("\13>\3>\3>\6>\u0194\n>\r>\16>\u0195\3>\5>\u0199\n>\3>")
        buf.write("\6>\u019c\n>\r>\16>\u019d\3>\3>\5>\u01a2\n>\5>\u01a4\n")
        buf.write(">\3?\3?\3?\3?\3@\3@\5@\u01ac\n@\3A\3A\7A\u01b0\nA\fA\16")
        buf.write("A\u01b3\13A\3A\3A\3B\3B\3B\3B\7B\u01bb\nB\fB\16B\u01be")
        buf.write("\13B\3B\3B\3B\3B\3B\3C\3C\3C\3C\7C\u01c9\nC\fC\16C\u01cc")
        buf.write("\13C\3C\3C\3D\3D\3D\3D\3E\3E\4\u01b1\u01bc\2F\3\3\5\4")
        buf.write("\7\5\t\6\13\7\r\b\17\t\21\n\23\13\25\f\27\r\31\16\33\17")
        buf.write("\35\20\37\21!\22#\23%\24\'\25)\26+\27-\30/\31\61\32\63")
        buf.write("\33\65\34\67\359\36;\37= ?!A\"C#E$G%I&K\'M(O)Q*S+U,W-")
        buf.write("Y.[/]\60_\61a\62c\63e\64g\65i\2k\2m\2o\2q\2s\2u\66w\2")
        buf.write("y\67{8}9\177\2\u0081:\u0083;\u0085<\u0087=\u0089>\3\2")
        buf.write("\13\5\2C\\aac|\3\2\62;\3\2\63;\4\2--//\4\2GGgg\5\2\f\f")
        buf.write("))^^\5\2\f\f$$^^\4\2\f\f\17\17\5\2\13\f\17\17\"\"\2\u01e7")
        buf.write("\2\3\3\2\2\2\2\5\3\2\2\2\2\7\3\2\2\2\2\t\3\2\2\2\2\13")
        buf.write("\3\2\2\2\2\r\3\2\2\2\2\17\3\2\2\2\2\21\3\2\2\2\2\23\3")
        buf.write("\2\2\2\2\25\3\2\2\2\2\27\3\2\2\2\2\31\3\2\2\2\2\33\3\2")
        buf.write("\2\2\2\35\3\2\2\2\2\37\3\2\2\2\2!\3\2\2\2\2#\3\2\2\2\2")
        buf.write("%\3\2\2\2\2\'\3\2\2\2\2)\3\2\2\2\2+\3\2\2\2\2-\3\2\2\2")
        buf.write("\2/\3\2\2\2\2\61\3\2\2\2\2\63\3\2\2\2\2\65\3\2\2\2\2\67")
        buf.write("\3\2\2\2\29\3\2\2\2\2;\3\2\2\2\2=\3\2\2\2\2?\3\2\2\2\2")
        buf.write("A\3\2\2\2\2C\3\2\2\2\2E\3\2\2\2\2G\3\2\2\2\2I\3\2\2\2")
        buf.write("\2K\3\2\2\2\2M\3\2\2\2\2O\3\2\2\2\2Q\3\2\2\2\2S\3\2\2")
        buf.write("\2\2U\3\2\2\2\2W\3\2\2\2\2Y\3\2\2\2\2[\3\2\2\2\2]\3\2")
        buf.write("\2\2\2_\3\2\2\2\2a\3\2\2\2\2c\3\2\2\2\2e\3\2\2\2\2g\3")
        buf.write("\2\2\2\2u\3\2\2\2\2y\3\2\2\2\2{\3\2\2\2\2}\3\2\2\2\2\u0081")
        buf.write("\3\2\2\2\2\u0083\3\2\2\2\2\u0085\3\2\2\2\2\u0087\3\2\2")
        buf.write("\2\2\u0089\3\2\2\2\3\u008b\3\2\2\2\5\u008d\3\2\2\2\7\u008f")
        buf.write("\3\2\2\2\t\u0091\3\2\2\2\13\u0093\3\2\2\2\r\u0095\3\2")
        buf.write("\2\2\17\u0098\3\2\2\2\21\u009b\3\2\2\2\23\u009d\3\2\2")
        buf.write("\2\25\u009f\3\2\2\2\27\u00a1\3\2\2\2\31\u00a3\3\2\2\2")
        buf.write("\33\u00a5\3\2\2\2\35\u00a7\3\2\2\2\37\u00a9\3\2\2\2!\u00ab")
        buf.write("\3\2\2\2#\u00ad\3\2\2\2%\u00b0\3\2\2\2\'\u00b3\3\2\2\2")
        buf.write(")\u00b6\3\2\2\2+\u00b9\3\2\2\2-\u00bc\3\2\2\2/\u00bf\3")
        buf.write("\2\2\2\61\u00c1\3\2\2\2\63\u00c3\3\2\2\2\65\u00c5\3\2")
        buf.write("\2\2\67\u00c8\3\2\2\29\u00cb\3\2\2\2;\u00ce\3\2\2\2=\u00d1")
        buf.write("\3\2\2\2?\u00d4\3\2\2\2A\u00d8\3\2\2\2C\u00da\3\2\2\2")
        buf.write("E\u00dc\3\2\2\2G\u00df\3\2\2\2I\u00f2\3\2\2\2K\u00f7\3")
        buf.write("\2\2\2M\u00fb\3\2\2\2O\u0102\3\2\2\2Q\u0108\3\2\2\2S\u010d")
        buf.write("\3\2\2\2U\u0110\3\2\2\2W\u0115\3\2\2\2Y\u0119\3\2\2\2")
        buf.write("[\u011e\3\2\2\2]\u0124\3\2\2\2_\u012b\3\2\2\2a\u0131\3")
        buf.write("\2\2\2c\u0139\3\2\2\2e\u0142\3\2\2\2g\u0149\3\2\2\2i\u014e")
        buf.write("\3\2\2\2k\u0150\3\2\2\2m\u0152\3\2\2\2o\u0154\3\2\2\2")
        buf.write("q\u0156\3\2\2\2s\u0175\3\2\2\2u\u0177\3\2\2\2w\u0181\3")
        buf.write("\2\2\2y\u0184\3\2\2\2{\u01a3\3\2\2\2}\u01a5\3\2\2\2\177")
        buf.write("\u01ab\3\2\2\2\u0081\u01ad\3\2\2\2\u0083\u01b6\3\2\2\2")
        buf.write("\u0085\u01c4\3\2\2\2\u0087\u01cf\3\2\2\2\u0089\u01d3\3")
        buf.write("\2\2\2\u008b\u008c\7*\2\2\u008c\4\3\2\2\2\u008d\u008e")
        buf.write("\7+\2\2\u008e\6\3\2\2\2\u008f\u0090\7]\2\2\u0090\b\3\2")
        buf.write("\2\2\u0091\u0092\7_\2\2\u0092\n\3\2\2\2\u0093\u0094\7")
        buf.write(".\2\2\u0094\f\3\2\2\2\u0095\u0096\7-\2\2\u0096\u0097\7")
        buf.write("-\2\2\u0097\16\3\2\2\2\u0098\u0099\7/\2\2\u0099\u009a")
        buf.write("\7/\2\2\u009a\20\3\2\2\2\u009b\u009c\7,\2\2\u009c\22\3")
        buf.write("\2\2\2\u009d\u009e\7(\2\2\u009e\24\3\2\2\2\u009f\u00a0")
        buf.write("\7-\2\2\u00a0\26\3\2\2\2\u00a1\u00a2\7/\2\2\u00a2\30\3")
        buf.write("\2\2\2\u00a3\u00a4\7#\2\2\u00a4\32\3\2\2\2\u00a5\u00a6")
        buf.write("\7\61\2\2\u00a6\34\3\2\2\2\u00a7\u00a8\7\'\2\2\u00a8\36")
        buf.write("\3\2\2\2\u00a9\u00aa\7>\2\2\u00aa \3\2\2\2\u00ab\u00ac")
        buf.write("\7@\2\2\u00ac\"\3\2\2\2\u00ad\u00ae\7>\2\2\u00ae\u00af")
        buf.write("\7?\2\2\u00af$\3\2\2\2\u00b0\u00b1\7@\2\2\u00b1\u00b2")
        buf.write("\7?\2\2\u00b2&\3\2\2\2\u00b3\u00b4\7?\2\2\u00b4\u00b5")
        buf.write("\7?\2\2\u00b5(\3\2\2\2\u00b6\u00b7\7#\2\2\u00b7\u00b8")
        buf.write("\7?\2\2\u00b8*\3\2\2\2\u00b9\u00ba\7(\2\2\u00ba\u00bb")
        buf.write("\7(\2\2\u00bb,\3\2\2\2\u00bc\u00bd\7~\2\2\u00bd\u00be")
        buf.write("\7~\2\2\u00be.\3\2\2\2\u00bf\u00c0\7A\2\2\u00c0\60\3\2")
        buf.write("\2\2\u00c1\u00c2\7<\2\2\u00c2\62\3\2\2\2\u00c3\u00c4\7")
        buf.write("?\2\2\u00c4\64\3\2\2\2\u00c5\u00c6\7,\2\2\u00c6\u00c7")
        buf.write("\7?\2\2\u00c7\66\3\2\2\2\u00c8\u00c9\7\61\2\2\u00c9\u00ca")
        buf.write("\7?\2\2\u00ca8\3\2\2\2\u00cb\u00cc\7\'\2\2\u00cc\u00cd")
        buf.write("\7?\2\2\u00cd:\3\2\2\2\u00ce\u00cf\7-\2\2\u00cf\u00d0")
        buf.write("\7?\2\2\u00d0<\3\2\2\2\u00d1\u00d2\7/\2\2\u00d2\u00d3")
        buf.write("\7?\2\2\u00d3>\3\2\2\2\u00d4\u00d5\7\60\2\2\u00d5\u00d6")
        buf.write("\7\60\2\2\u00d6\u00d7\7\60\2\2\u00d7@\3\2\2\2\u00d8\u00d9")
        buf.write("\7}\2\2\u00d9B\3\2\2\2\u00da\u00db\7\177\2\2\u00dbD\3")
        buf.write("\2\2\2\u00dc\u00dd\7.\2\2\u00dd\u00de\7\177\2\2\u00de")
        buf.write("F\3\2\2\2\u00df\u00e0\7%\2\2\u00e0\u00e1\7k\2\2\u00e1")
        buf.write("\u00e2\7p\2\2\u00e2\u00e3\7e\2\2\u00e3\u00e4\7n\2\2\u00e4")
        buf.write("\u00e5\7w\2\2\u00e5\u00e6\7f\2\2\u00e6\u00e7\7g\2\2\u00e7")
        buf.write("\u00e8\7\"\2\2\u00e8\u00e9\7>\2\2\u00e9\u00ea\7u\2\2\u00ea")
        buf.write("\u00eb\7v\2\2\u00eb\u00ec\7f\2\2\u00ec\u00ed\7k\2\2\u00ed")
        buf.write("\u00ee\7q\2\2\u00ee\u00ef\7\60\2\2\u00ef\u00f0\7j\2\2")
        buf.write("\u00f0\u00f1\7@\2\2\u00f1H\3\2\2\2\u00f2\u00f3\7e\2\2")
        buf.write("\u00f3\u00f4\7j\2\2\u00f4\u00f5\7c\2\2\u00f5\u00f6\7t")
        buf.write("\2\2\u00f6J\3\2\2\2\u00f7\u00f8\7k\2\2\u00f8\u00f9\7p")
        buf.write("\2\2\u00f9\u00fa\7v\2\2\u00faL\3\2\2\2\u00fb\u00fc\7f")
        buf.write("\2\2\u00fc\u00fd\7q\2\2\u00fd\u00fe\7w\2\2\u00fe\u00ff")
        buf.write("\7d\2\2\u00ff\u0100\7n\2\2\u0100\u0101\7g\2\2\u0101N\3")
        buf.write("\2\2\2\u0102\u0103\7h\2\2\u0103\u0104\7n\2\2\u0104\u0105")
        buf.write("\7q\2\2\u0105\u0106\7c\2\2\u0106\u0107\7v\2\2\u0107P\3")
        buf.write("\2\2\2\u0108\u0109\7x\2\2\u0109\u010a\7q\2\2\u010a\u010b")
        buf.write("\7k\2\2\u010b\u010c\7f\2\2\u010cR\3\2\2\2\u010d\u010e")
        buf.write("\7k\2\2\u010e\u010f\7h\2\2\u010fT\3\2\2\2\u0110\u0111")
        buf.write("\7g\2\2\u0111\u0112\7n\2\2\u0112\u0113\7u\2\2\u0113\u0114")
        buf.write("\7g\2\2\u0114V\3\2\2\2\u0115\u0116\7h\2\2\u0116\u0117")
        buf.write("\7q\2\2\u0117\u0118\7t\2\2\u0118X\3\2\2\2\u0119\u011a")
        buf.write("\7i\2\2\u011a\u011b\7q\2\2\u011b\u011c\7v\2\2\u011c\u011d")
        buf.write("\7q\2\2\u011dZ\3\2\2\2\u011e\u011f\7y\2\2\u011f\u0120")
        buf.write("\7j\2\2\u0120\u0121\7k\2\2\u0121\u0122\7n\2\2\u0122\u0123")
        buf.write("\7g\2\2\u0123\\\3\2\2\2\u0124\u0125\7u\2\2\u0125\u0126")
        buf.write("\7y\2\2\u0126\u0127\7k\2\2\u0127\u0128\7v\2\2\u0128\u0129")
        buf.write("\7e\2\2\u0129\u012a\7j\2\2\u012a^\3\2\2\2\u012b\u012c")
        buf.write("\7d\2\2\u012c\u012d\7t\2\2\u012d\u012e\7g\2\2\u012e\u012f")
        buf.write("\7c\2\2\u012f\u0130\7m\2\2\u0130`\3\2\2\2\u0131\u0132")
        buf.write("\7f\2\2\u0132\u0133\7g\2\2\u0133\u0134\7h\2\2\u0134\u0135")
        buf.write("\7c\2\2\u0135\u0136\7w\2\2\u0136\u0137\7n\2\2\u0137\u0138")
        buf.write("\7v\2\2\u0138b\3\2\2\2\u0139\u013a\7e\2\2\u013a\u013b")
        buf.write("\7q\2\2\u013b\u013c\7p\2\2\u013c\u013d\7v\2\2\u013d\u013e")
        buf.write("\7k\2\2\u013e\u013f\7p\2\2\u013f\u0140\7w\2\2\u0140\u0141")
        buf.write("\7g\2\2\u0141d\3\2\2\2\u0142\u0143\7t\2\2\u0143\u0144")
        buf.write("\7g\2\2\u0144\u0145\7v\2\2\u0145\u0146\7w\2\2\u0146\u0147")
        buf.write("\7t\2\2\u0147\u0148\7p\2\2\u0148f\3\2\2\2\u0149\u014a")
        buf.write("\7e\2\2\u014a\u014b\7c\2\2\u014b\u014c\7u\2\2\u014c\u014d")
        buf.write("\7g\2\2\u014dh\3\2\2\2\u014e\u014f\t\2\2\2\u014fj\3\2")
        buf.write("\2\2\u0150\u0151\t\3\2\2\u0151l\3\2\2\2\u0152\u0153\t")
        buf.write("\4\2\2\u0153n\3\2\2\2\u0154\u0155\t\5\2\2\u0155p\3\2\2")
        buf.write("\2\u0156\u0158\t\6\2\2\u0157\u0159\5o8\2\u0158\u0157\3")
        buf.write("\2\2\2\u0158\u0159\3\2\2\2\u0159\u015b\3\2\2\2\u015a\u015c")
        buf.write("\5k\66\2\u015b\u015a\3\2\2\2\u015c\u015d\3\2\2\2\u015d")
        buf.write("\u015b\3\2\2\2\u015d\u015e\3\2\2\2\u015er\3\2\2\2\u015f")
        buf.write("\u0160\7^\2\2\u0160\u0176\7)\2\2\u0161\u0162\7^\2\2\u0162")
        buf.write("\u0176\7$\2\2\u0163\u0164\7^\2\2\u0164\u0176\7A\2\2\u0165")
        buf.write("\u0166\7^\2\2\u0166\u0176\7^\2\2\u0167\u0168\7^\2\2\u0168")
        buf.write("\u0176\7c\2\2\u0169\u016a\7^\2\2\u016a\u0176\7d\2\2\u016b")
        buf.write("\u016c\7^\2\2\u016c\u0176\7h\2\2\u016d\u016e\7^\2\2\u016e")
        buf.write("\u0176\7p\2\2\u016f\u0170\7^\2\2\u0170\u0176\7t\2\2\u0171")
        buf.write("\u0172\7^\2\2\u0172\u0176\7v\2\2\u0173\u0174\7^\2\2\u0174")
        buf.write("\u0176\7x\2\2\u0175\u015f\3\2\2\2\u0175\u0161\3\2\2\2")
        buf.write("\u0175\u0163\3\2\2\2\u0175\u0165\3\2\2\2\u0175\u0167\3")
        buf.write("\2\2\2\u0175\u0169\3\2\2\2\u0175\u016b\3\2\2\2\u0175\u016d")
        buf.write("\3\2\2\2\u0175\u016f\3\2\2\2\u0175\u0171\3\2\2\2\u0175")
        buf.write("\u0173\3\2\2\2\u0176t\3\2\2\2\u0177\u017c\5i\65\2\u0178")
        buf.write("\u017b\5i\65\2\u0179\u017b\5k\66\2\u017a\u0178\3\2\2\2")
        buf.write("\u017a\u0179\3\2\2\2\u017b\u017e\3\2\2\2\u017c\u017a\3")
        buf.write("\2\2\2\u017c\u017d\3\2\2\2\u017dv\3\2\2\2\u017e\u017c")
        buf.write("\3\2\2\2\u017f\u0182\n\7\2\2\u0180\u0182\5s:\2\u0181\u017f")
        buf.write("\3\2\2\2\u0181\u0180\3\2\2\2\u0182x\3\2\2\2\u0183\u0185")
        buf.write("\5o8\2\u0184\u0183\3\2\2\2\u0184\u0185\3\2\2\2\u0185\u0187")
        buf.write("\3\2\2\2\u0186\u0188\5k\66\2\u0187\u0186\3\2\2\2\u0188")
        buf.write("\u0189\3\2\2\2\u0189\u0187\3\2\2\2\u0189\u018a\3\2\2\2")
        buf.write("\u018az\3\2\2\2\u018b\u018d\5k\66\2\u018c\u018b\3\2\2")
        buf.write("\2\u018d\u0190\3\2\2\2\u018e\u018c\3\2\2\2\u018e\u018f")
        buf.write("\3\2\2\2\u018f\u0191\3\2\2\2\u0190\u018e\3\2\2\2\u0191")
        buf.write("\u0193\7\60\2\2\u0192\u0194\5k\66\2\u0193\u0192\3\2\2")
        buf.write("\2\u0194\u0195\3\2\2\2\u0195\u0193\3\2\2\2\u0195\u0196")
        buf.write("\3\2\2\2\u0196\u0198\3\2\2\2\u0197\u0199\5q9\2\u0198\u0197")
        buf.write("\3\2\2\2\u0198\u0199\3\2\2\2\u0199\u01a4\3\2\2\2\u019a")
        buf.write("\u019c\5k\66\2\u019b\u019a\3\2\2\2\u019c\u019d\3\2\2\2")
        buf.write("\u019d\u019b\3\2\2\2\u019d\u019e\3\2\2\2\u019e\u019f\3")
        buf.write("\2\2\2\u019f\u01a1\7\60\2\2\u01a0\u01a2\5q9\2\u01a1\u01a0")
        buf.write("\3\2\2\2\u01a1\u01a2\3\2\2\2\u01a2\u01a4\3\2\2\2\u01a3")
        buf.write("\u018e\3\2\2\2\u01a3\u019b\3\2\2\2\u01a4|\3\2\2\2\u01a5")
        buf.write("\u01a6\7)\2\2\u01a6\u01a7\5w<\2\u01a7\u01a8\7)\2\2\u01a8")
        buf.write("~\3\2\2\2\u01a9\u01ac\n\b\2\2\u01aa\u01ac\5s:\2\u01ab")
        buf.write("\u01a9\3\2\2\2\u01ab\u01aa\3\2\2\2\u01ac\u0080\3\2\2\2")
        buf.write("\u01ad\u01b1\7$\2\2\u01ae\u01b0\5\177@\2\u01af\u01ae\3")
        buf.write("\2\2\2\u01b0\u01b3\3\2\2\2\u01b1\u01b2\3\2\2\2\u01b1\u01af")
        buf.write("\3\2\2\2\u01b2\u01b4\3\2\2\2\u01b3\u01b1\3\2\2\2\u01b4")
        buf.write("\u01b5\7$\2\2\u01b5\u0082\3\2\2\2\u01b6\u01b7\7\61\2\2")
        buf.write("\u01b7\u01b8\7,\2\2\u01b8\u01bc\3\2\2\2\u01b9\u01bb\13")
        buf.write("\2\2\2\u01ba\u01b9\3\2\2\2\u01bb\u01be\3\2\2\2\u01bc\u01bd")
        buf.write("\3\2\2\2\u01bc\u01ba\3\2\2\2\u01bd\u01bf\3\2\2\2\u01be")
        buf.write("\u01bc\3\2\2\2\u01bf\u01c0\7,\2\2\u01c0\u01c1\7\61\2\2")
        buf.write("\u01c1\u01c2\3\2\2\2\u01c2\u01c3\bB\2\2\u01c3\u0084\3")
        buf.write("\2\2\2\u01c4\u01c5\7\61\2\2\u01c5\u01c6\7\61\2\2\u01c6")
        buf.write("\u01ca\3\2\2\2\u01c7\u01c9\n\t\2\2\u01c8\u01c7\3\2\2\2")
        buf.write("\u01c9\u01cc\3\2\2\2\u01ca\u01c8\3\2\2\2\u01ca\u01cb\3")
        buf.write("\2\2\2\u01cb\u01cd\3\2\2\2\u01cc\u01ca\3\2\2\2\u01cd\u01ce")
        buf.write("\bC\2\2\u01ce\u0086\3\2\2\2\u01cf\u01d0\t\n\2\2\u01d0")
        buf.write("\u01d1\3\2\2\2\u01d1\u01d2\bD\2\2\u01d2\u0088\3\2\2\2")
        buf.write("\u01d3\u01d4\7=\2\2\u01d4\u008a\3\2\2\2\25\2\u0158\u015d")
        buf.write("\u0175\u017a\u017c\u0181\u0184\u0189\u018e\u0195\u0198")
        buf.write("\u019d\u01a1\u01a3\u01ab\u01b1\u01bc\u01ca\3\b\2\2")
        return buf.getvalue()


class CLexer(Lexer):

    atn = ATNDeserializer().deserialize(serializedATN())

    decisionsToDFA = [ DFA(ds, i) for i, ds in enumerate(atn.decisionToState) ]

    T__0 = 1
    T__1 = 2
    T__2 = 3
    T__3 = 4
    T__4 = 5
    T__5 = 6
    T__6 = 7
    T__7 = 8
    T__8 = 9
    T__9 = 10
    T__10 = 11
    T__11 = 12
    T__12 = 13
    T__13 = 14
    T__14 = 15
    T__15 = 16
    T__16 = 17
    T__17 = 18
    T__18 = 19
    T__19 = 20
    T__20 = 21
    T__21 = 22
    T__22 = 23
    T__23 = 24
    T__24 = 25
    T__25 = 26
    T__26 = 27
    T__27 = 28
    T__28 = 29
    T__29 = 30
    T__30 = 31
    T__31 = 32
    T__32 = 33
    T__33 = 34
    IncludeStdIO = 35
    Char = 36
    Int = 37
    Double = 38
    Float = 39
    Void = 40
    If = 41
    Else = 42
    For = 43
    Goto = 44
    While = 45
    Switch = 46
    Break = 47
    Default = 48
    Continue = 49
    Return = 50
    Case = 51
    Identifier = 52
    ConstantInt = 53
    ConstantFloat = 54
    ConstantChar = 55
    StringLiteral = 56
    BlockComment = 57
    LineComment = 58
    WS = 59
    EOS = 60

    channelNames = [ u"DEFAULT_TOKEN_CHANNEL", u"HIDDEN" ]

    modeNames = [ "DEFAULT_MODE" ]

    literalNames = [ "<INVALID>",
            "'('", "')'", "'['", "']'", "','", "'++'", "'--'", "'*'", "'&'", 
            "'+'", "'-'", "'!'", "'/'", "'%'", "'<'", "'>'", "'<='", "'>='", 
            "'=='", "'!='", "'&&'", "'||'", "'?'", "':'", "'='", "'*='", 
            "'/='", "'%='", "'+='", "'-='", "'...'", "'{'", "'}'", "',}'", 
            "'#include <stdio.h>'", "'char'", "'int'", "'double'", "'float'", 
            "'void'", "'if'", "'else'", "'for'", "'goto'", "'while'", "'switch'", 
            "'break'", "'default'", "'continue'", "'return'", "'case'", 
            "';'" ]

    symbolicNames = [ "<INVALID>",
            "IncludeStdIO", "Char", "Int", "Double", "Float", "Void", "If", 
            "Else", "For", "Goto", "While", "Switch", "Break", "Default", 
            "Continue", "Return", "Case", "Identifier", "ConstantInt", "ConstantFloat", 
            "ConstantChar", "StringLiteral", "BlockComment", "LineComment", 
            "WS", "EOS" ]

    ruleNames = [ "T__0", "T__1", "T__2", "T__3", "T__4", "T__5", "T__6", 
                  "T__7", "T__8", "T__9", "T__10", "T__11", "T__12", "T__13", 
                  "T__14", "T__15", "T__16", "T__17", "T__18", "T__19", 
                  "T__20", "T__21", "T__22", "T__23", "T__24", "T__25", 
                  "T__26", "T__27", "T__28", "T__29", "T__30", "T__31", 
                  "T__32", "T__33", "IncludeStdIO", "Char", "Int", "Double", 
                  "Float", "Void", "If", "Else", "For", "Goto", "While", 
                  "Switch", "Break", "Default", "Continue", "Return", "Case", 
                  "NonDigit", "Digit", "NonZeroDigit", "Sign", "ExponentPart", 
                  "EscapeSequence", "Identifier", "CChar", "ConstantInt", 
                  "ConstantFloat", "ConstantChar", "SChar", "StringLiteral", 
                  "BlockComment", "LineComment", "WS", "EOS" ]

    grammarFileName = "C.g4"

    def __init__(self, input=None, output:TextIO = sys.stdout):
        super().__init__(input, output)
        self.checkVersion("4.7.2")
        self._interp = LexerATNSimulator(self, self.atn, self.decisionsToDFA, PredictionContextCache())
        self._actions = None
        self._predicates = None


