# Generated from C.g4 by ANTLR 4.7.2
from antlr4 import *
from io import StringIO
from typing.io import TextIO
import sys



def serializedATN():
    with StringIO() as buf:
        buf.write("\3\u608b\ua72a\u8133\ub9ed\u417c\u3be7\u7786\u5964\2=")
        buf.write("\u01d1\b\1\4\2\t\2\4\3\t\3\4\4\t\4\4\5\t\5\4\6\t\6\4\7")
        buf.write("\t\7\4\b\t\b\4\t\t\t\4\n\t\n\4\13\t\13\4\f\t\f\4\r\t\r")
        buf.write("\4\16\t\16\4\17\t\17\4\20\t\20\4\21\t\21\4\22\t\22\4\23")
        buf.write("\t\23\4\24\t\24\4\25\t\25\4\26\t\26\4\27\t\27\4\30\t\30")
        buf.write("\4\31\t\31\4\32\t\32\4\33\t\33\4\34\t\34\4\35\t\35\4\36")
        buf.write("\t\36\4\37\t\37\4 \t \4!\t!\4\"\t\"\4#\t#\4$\t$\4%\t%")
        buf.write("\4&\t&\4\'\t\'\4(\t(\4)\t)\4*\t*\4+\t+\4,\t,\4-\t-\4.")
        buf.write("\t.\4/\t/\4\60\t\60\4\61\t\61\4\62\t\62\4\63\t\63\4\64")
        buf.write("\t\64\4\65\t\65\4\66\t\66\4\67\t\67\48\t8\49\t9\4:\t:")
        buf.write("\4;\t;\4<\t<\4=\t=\4>\t>\4?\t?\4@\t@\4A\tA\4B\tB\4C\t")
        buf.write("C\4D\tD\3\2\3\2\3\3\3\3\3\4\3\4\3\5\3\5\3\6\3\6\3\7\3")
        buf.write("\7\3\7\3\b\3\b\3\b\3\t\3\t\3\n\3\n\3\13\3\13\3\f\3\f\3")
        buf.write("\r\3\r\3\16\3\16\3\17\3\17\3\20\3\20\3\21\3\21\3\21\3")
        buf.write("\22\3\22\3\22\3\23\3\23\3\23\3\24\3\24\3\24\3\25\3\25")
        buf.write("\3\25\3\26\3\26\3\26\3\27\3\27\3\30\3\30\3\31\3\31\3\32")
        buf.write("\3\32\3\32\3\33\3\33\3\33\3\34\3\34\3\34\3\35\3\35\3\35")
        buf.write("\3\36\3\36\3\36\3\37\3\37\3\37\3\37\3 \3 \3!\3!\3\"\3")
        buf.write("\"\3\"\3#\3#\3#\3#\3#\3#\3#\3#\3#\3#\3#\3#\3#\3#\3#\3")
        buf.write("#\3#\3#\3#\3$\3$\3$\3$\3$\3%\3%\3%\3%\3&\3&\3&\3&\3&\3")
        buf.write("&\3&\3\'\3\'\3\'\3\'\3\'\3\'\3(\3(\3(\3(\3(\3)\3)\3)\3")
        buf.write("*\3*\3*\3*\3*\3+\3+\3+\3+\3,\3,\3,\3,\3,\3-\3-\3-\3-\3")
        buf.write("-\3-\3.\3.\3.\3.\3.\3.\3.\3/\3/\3/\3/\3/\3/\3\60\3\60")
        buf.write("\3\60\3\60\3\60\3\60\3\60\3\60\3\61\3\61\3\61\3\61\3\61")
        buf.write("\3\61\3\61\3\61\3\61\3\62\3\62\3\62\3\62\3\62\3\62\3\62")
        buf.write("\3\63\3\63\3\63\3\63\3\63\3\64\3\64\3\65\3\65\3\66\3\66")
        buf.write("\3\67\3\67\38\38\58\u0155\n8\38\68\u0158\n8\r8\168\u0159")
        buf.write("\39\39\39\39\39\39\39\39\39\39\39\39\39\39\39\39\39\3")
        buf.write("9\39\39\39\39\59\u0172\n9\3:\3:\3:\7:\u0177\n:\f:\16:")
        buf.write("\u017a\13:\3;\3;\5;\u017e\n;\3<\5<\u0181\n<\3<\6<\u0184")
        buf.write("\n<\r<\16<\u0185\3=\7=\u0189\n=\f=\16=\u018c\13=\3=\3")
        buf.write("=\6=\u0190\n=\r=\16=\u0191\3=\5=\u0195\n=\3=\6=\u0198")
        buf.write("\n=\r=\16=\u0199\3=\3=\5=\u019e\n=\5=\u01a0\n=\3>\3>\3")
        buf.write(">\3>\3?\3?\5?\u01a8\n?\3@\3@\7@\u01ac\n@\f@\16@\u01af")
        buf.write("\13@\3@\3@\3A\3A\3A\3A\7A\u01b7\nA\fA\16A\u01ba\13A\3")
        buf.write("A\3A\3A\3A\3A\3B\3B\3B\3B\7B\u01c5\nB\fB\16B\u01c8\13")
        buf.write("B\3B\3B\3C\3C\3C\3C\3D\3D\4\u01ad\u01b8\2E\3\3\5\4\7\5")
        buf.write("\t\6\13\7\r\b\17\t\21\n\23\13\25\f\27\r\31\16\33\17\35")
        buf.write("\20\37\21!\22#\23%\24\'\25)\26+\27-\30/\31\61\32\63\33")
        buf.write("\65\34\67\359\36;\37= ?!A\"C#E$G%I&K\'M(O)Q*S+U,W-Y.[")
        buf.write("/]\60_\61a\62c\63e\64g\2i\2k\2m\2o\2q\2s\65u\2w\66y\67")
        buf.write("{8}\2\1779\u0081:\u0083;\u0085<\u0087=\3\2\13\5\2C\\a")
        buf.write("ac|\3\2\62;\3\2\63;\4\2--//\4\2GGgg\5\2\f\f))^^\5\2\f")
        buf.write("\f$$^^\4\2\f\f\17\17\5\2\13\f\17\17\"\"\2\u01e3\2\3\3")
        buf.write("\2\2\2\2\5\3\2\2\2\2\7\3\2\2\2\2\t\3\2\2\2\2\13\3\2\2")
        buf.write("\2\2\r\3\2\2\2\2\17\3\2\2\2\2\21\3\2\2\2\2\23\3\2\2\2")
        buf.write("\2\25\3\2\2\2\2\27\3\2\2\2\2\31\3\2\2\2\2\33\3\2\2\2\2")
        buf.write("\35\3\2\2\2\2\37\3\2\2\2\2!\3\2\2\2\2#\3\2\2\2\2%\3\2")
        buf.write("\2\2\2\'\3\2\2\2\2)\3\2\2\2\2+\3\2\2\2\2-\3\2\2\2\2/\3")
        buf.write("\2\2\2\2\61\3\2\2\2\2\63\3\2\2\2\2\65\3\2\2\2\2\67\3\2")
        buf.write("\2\2\29\3\2\2\2\2;\3\2\2\2\2=\3\2\2\2\2?\3\2\2\2\2A\3")
        buf.write("\2\2\2\2C\3\2\2\2\2E\3\2\2\2\2G\3\2\2\2\2I\3\2\2\2\2K")
        buf.write("\3\2\2\2\2M\3\2\2\2\2O\3\2\2\2\2Q\3\2\2\2\2S\3\2\2\2\2")
        buf.write("U\3\2\2\2\2W\3\2\2\2\2Y\3\2\2\2\2[\3\2\2\2\2]\3\2\2\2")
        buf.write("\2_\3\2\2\2\2a\3\2\2\2\2c\3\2\2\2\2e\3\2\2\2\2s\3\2\2")
        buf.write("\2\2w\3\2\2\2\2y\3\2\2\2\2{\3\2\2\2\2\177\3\2\2\2\2\u0081")
        buf.write("\3\2\2\2\2\u0083\3\2\2\2\2\u0085\3\2\2\2\2\u0087\3\2\2")
        buf.write("\2\3\u0089\3\2\2\2\5\u008b\3\2\2\2\7\u008d\3\2\2\2\t\u008f")
        buf.write("\3\2\2\2\13\u0091\3\2\2\2\r\u0093\3\2\2\2\17\u0096\3\2")
        buf.write("\2\2\21\u0099\3\2\2\2\23\u009b\3\2\2\2\25\u009d\3\2\2")
        buf.write("\2\27\u009f\3\2\2\2\31\u00a1\3\2\2\2\33\u00a3\3\2\2\2")
        buf.write("\35\u00a5\3\2\2\2\37\u00a7\3\2\2\2!\u00a9\3\2\2\2#\u00ac")
        buf.write("\3\2\2\2%\u00af\3\2\2\2\'\u00b2\3\2\2\2)\u00b5\3\2\2\2")
        buf.write("+\u00b8\3\2\2\2-\u00bb\3\2\2\2/\u00bd\3\2\2\2\61\u00bf")
        buf.write("\3\2\2\2\63\u00c1\3\2\2\2\65\u00c4\3\2\2\2\67\u00c7\3")
        buf.write("\2\2\29\u00ca\3\2\2\2;\u00cd\3\2\2\2=\u00d0\3\2\2\2?\u00d4")
        buf.write("\3\2\2\2A\u00d6\3\2\2\2C\u00d8\3\2\2\2E\u00db\3\2\2\2")
        buf.write("G\u00ee\3\2\2\2I\u00f3\3\2\2\2K\u00f7\3\2\2\2M\u00fe\3")
        buf.write("\2\2\2O\u0104\3\2\2\2Q\u0109\3\2\2\2S\u010c\3\2\2\2U\u0111")
        buf.write("\3\2\2\2W\u0115\3\2\2\2Y\u011a\3\2\2\2[\u0120\3\2\2\2")
        buf.write("]\u0127\3\2\2\2_\u012d\3\2\2\2a\u0135\3\2\2\2c\u013e\3")
        buf.write("\2\2\2e\u0145\3\2\2\2g\u014a\3\2\2\2i\u014c\3\2\2\2k\u014e")
        buf.write("\3\2\2\2m\u0150\3\2\2\2o\u0152\3\2\2\2q\u0171\3\2\2\2")
        buf.write("s\u0173\3\2\2\2u\u017d\3\2\2\2w\u0180\3\2\2\2y\u019f\3")
        buf.write("\2\2\2{\u01a1\3\2\2\2}\u01a7\3\2\2\2\177\u01a9\3\2\2\2")
        buf.write("\u0081\u01b2\3\2\2\2\u0083\u01c0\3\2\2\2\u0085\u01cb\3")
        buf.write("\2\2\2\u0087\u01cf\3\2\2\2\u0089\u008a\7*\2\2\u008a\4")
        buf.write("\3\2\2\2\u008b\u008c\7+\2\2\u008c\6\3\2\2\2\u008d\u008e")
        buf.write("\7]\2\2\u008e\b\3\2\2\2\u008f\u0090\7_\2\2\u0090\n\3\2")
        buf.write("\2\2\u0091\u0092\7.\2\2\u0092\f\3\2\2\2\u0093\u0094\7")
        buf.write("-\2\2\u0094\u0095\7-\2\2\u0095\16\3\2\2\2\u0096\u0097")
        buf.write("\7/\2\2\u0097\u0098\7/\2\2\u0098\20\3\2\2\2\u0099\u009a")
        buf.write("\7,\2\2\u009a\22\3\2\2\2\u009b\u009c\7-\2\2\u009c\24\3")
        buf.write("\2\2\2\u009d\u009e\7/\2\2\u009e\26\3\2\2\2\u009f\u00a0")
        buf.write("\7#\2\2\u00a0\30\3\2\2\2\u00a1\u00a2\7\61\2\2\u00a2\32")
        buf.write("\3\2\2\2\u00a3\u00a4\7\'\2\2\u00a4\34\3\2\2\2\u00a5\u00a6")
        buf.write("\7>\2\2\u00a6\36\3\2\2\2\u00a7\u00a8\7@\2\2\u00a8 \3\2")
        buf.write("\2\2\u00a9\u00aa\7>\2\2\u00aa\u00ab\7?\2\2\u00ab\"\3\2")
        buf.write("\2\2\u00ac\u00ad\7@\2\2\u00ad\u00ae\7?\2\2\u00ae$\3\2")
        buf.write("\2\2\u00af\u00b0\7?\2\2\u00b0\u00b1\7?\2\2\u00b1&\3\2")
        buf.write("\2\2\u00b2\u00b3\7#\2\2\u00b3\u00b4\7?\2\2\u00b4(\3\2")
        buf.write("\2\2\u00b5\u00b6\7(\2\2\u00b6\u00b7\7(\2\2\u00b7*\3\2")
        buf.write("\2\2\u00b8\u00b9\7~\2\2\u00b9\u00ba\7~\2\2\u00ba,\3\2")
        buf.write("\2\2\u00bb\u00bc\7A\2\2\u00bc.\3\2\2\2\u00bd\u00be\7<")
        buf.write("\2\2\u00be\60\3\2\2\2\u00bf\u00c0\7?\2\2\u00c0\62\3\2")
        buf.write("\2\2\u00c1\u00c2\7,\2\2\u00c2\u00c3\7?\2\2\u00c3\64\3")
        buf.write("\2\2\2\u00c4\u00c5\7\61\2\2\u00c5\u00c6\7?\2\2\u00c6\66")
        buf.write("\3\2\2\2\u00c7\u00c8\7\'\2\2\u00c8\u00c9\7?\2\2\u00c9")
        buf.write("8\3\2\2\2\u00ca\u00cb\7-\2\2\u00cb\u00cc\7?\2\2\u00cc")
        buf.write(":\3\2\2\2\u00cd\u00ce\7/\2\2\u00ce\u00cf\7?\2\2\u00cf")
        buf.write("<\3\2\2\2\u00d0\u00d1\7\60\2\2\u00d1\u00d2\7\60\2\2\u00d2")
        buf.write("\u00d3\7\60\2\2\u00d3>\3\2\2\2\u00d4\u00d5\7}\2\2\u00d5")
        buf.write("@\3\2\2\2\u00d6\u00d7\7\177\2\2\u00d7B\3\2\2\2\u00d8\u00d9")
        buf.write("\7.\2\2\u00d9\u00da\7\177\2\2\u00daD\3\2\2\2\u00db\u00dc")
        buf.write("\7%\2\2\u00dc\u00dd\7k\2\2\u00dd\u00de\7p\2\2\u00de\u00df")
        buf.write("\7e\2\2\u00df\u00e0\7n\2\2\u00e0\u00e1\7w\2\2\u00e1\u00e2")
        buf.write("\7f\2\2\u00e2\u00e3\7g\2\2\u00e3\u00e4\7\"\2\2\u00e4\u00e5")
        buf.write("\7>\2\2\u00e5\u00e6\7u\2\2\u00e6\u00e7\7v\2\2\u00e7\u00e8")
        buf.write("\7f\2\2\u00e8\u00e9\7k\2\2\u00e9\u00ea\7q\2\2\u00ea\u00eb")
        buf.write("\7\60\2\2\u00eb\u00ec\7j\2\2\u00ec\u00ed\7@\2\2\u00ed")
        buf.write("F\3\2\2\2\u00ee\u00ef\7e\2\2\u00ef\u00f0\7j\2\2\u00f0")
        buf.write("\u00f1\7c\2\2\u00f1\u00f2\7t\2\2\u00f2H\3\2\2\2\u00f3")
        buf.write("\u00f4\7k\2\2\u00f4\u00f5\7p\2\2\u00f5\u00f6\7v\2\2\u00f6")
        buf.write("J\3\2\2\2\u00f7\u00f8\7f\2\2\u00f8\u00f9\7q\2\2\u00f9")
        buf.write("\u00fa\7w\2\2\u00fa\u00fb\7d\2\2\u00fb\u00fc\7n\2\2\u00fc")
        buf.write("\u00fd\7g\2\2\u00fdL\3\2\2\2\u00fe\u00ff\7h\2\2\u00ff")
        buf.write("\u0100\7n\2\2\u0100\u0101\7q\2\2\u0101\u0102\7c\2\2\u0102")
        buf.write("\u0103\7v\2\2\u0103N\3\2\2\2\u0104\u0105\7x\2\2\u0105")
        buf.write("\u0106\7q\2\2\u0106\u0107\7k\2\2\u0107\u0108\7f\2\2\u0108")
        buf.write("P\3\2\2\2\u0109\u010a\7k\2\2\u010a\u010b\7h\2\2\u010b")
        buf.write("R\3\2\2\2\u010c\u010d\7g\2\2\u010d\u010e\7n\2\2\u010e")
        buf.write("\u010f\7u\2\2\u010f\u0110\7g\2\2\u0110T\3\2\2\2\u0111")
        buf.write("\u0112\7h\2\2\u0112\u0113\7q\2\2\u0113\u0114\7t\2\2\u0114")
        buf.write("V\3\2\2\2\u0115\u0116\7i\2\2\u0116\u0117\7q\2\2\u0117")
        buf.write("\u0118\7v\2\2\u0118\u0119\7q\2\2\u0119X\3\2\2\2\u011a")
        buf.write("\u011b\7y\2\2\u011b\u011c\7j\2\2\u011c\u011d\7k\2\2\u011d")
        buf.write("\u011e\7n\2\2\u011e\u011f\7g\2\2\u011fZ\3\2\2\2\u0120")
        buf.write("\u0121\7u\2\2\u0121\u0122\7y\2\2\u0122\u0123\7k\2\2\u0123")
        buf.write("\u0124\7v\2\2\u0124\u0125\7e\2\2\u0125\u0126\7j\2\2\u0126")
        buf.write("\\\3\2\2\2\u0127\u0128\7d\2\2\u0128\u0129\7t\2\2\u0129")
        buf.write("\u012a\7g\2\2\u012a\u012b\7c\2\2\u012b\u012c\7m\2\2\u012c")
        buf.write("^\3\2\2\2\u012d\u012e\7f\2\2\u012e\u012f\7g\2\2\u012f")
        buf.write("\u0130\7h\2\2\u0130\u0131\7c\2\2\u0131\u0132\7w\2\2\u0132")
        buf.write("\u0133\7n\2\2\u0133\u0134\7v\2\2\u0134`\3\2\2\2\u0135")
        buf.write("\u0136\7e\2\2\u0136\u0137\7q\2\2\u0137\u0138\7p\2\2\u0138")
        buf.write("\u0139\7v\2\2\u0139\u013a\7k\2\2\u013a\u013b\7p\2\2\u013b")
        buf.write("\u013c\7w\2\2\u013c\u013d\7g\2\2\u013db\3\2\2\2\u013e")
        buf.write("\u013f\7t\2\2\u013f\u0140\7g\2\2\u0140\u0141\7v\2\2\u0141")
        buf.write("\u0142\7w\2\2\u0142\u0143\7t\2\2\u0143\u0144\7p\2\2\u0144")
        buf.write("d\3\2\2\2\u0145\u0146\7e\2\2\u0146\u0147\7c\2\2\u0147")
        buf.write("\u0148\7u\2\2\u0148\u0149\7g\2\2\u0149f\3\2\2\2\u014a")
        buf.write("\u014b\t\2\2\2\u014bh\3\2\2\2\u014c\u014d\t\3\2\2\u014d")
        buf.write("j\3\2\2\2\u014e\u014f\t\4\2\2\u014fl\3\2\2\2\u0150\u0151")
        buf.write("\t\5\2\2\u0151n\3\2\2\2\u0152\u0154\t\6\2\2\u0153\u0155")
        buf.write("\5m\67\2\u0154\u0153\3\2\2\2\u0154\u0155\3\2\2\2\u0155")
        buf.write("\u0157\3\2\2\2\u0156\u0158\5i\65\2\u0157\u0156\3\2\2\2")
        buf.write("\u0158\u0159\3\2\2\2\u0159\u0157\3\2\2\2\u0159\u015a\3")
        buf.write("\2\2\2\u015ap\3\2\2\2\u015b\u015c\7^\2\2\u015c\u0172\7")
        buf.write(")\2\2\u015d\u015e\7^\2\2\u015e\u0172\7$\2\2\u015f\u0160")
        buf.write("\7^\2\2\u0160\u0172\7A\2\2\u0161\u0162\7^\2\2\u0162\u0172")
        buf.write("\7^\2\2\u0163\u0164\7^\2\2\u0164\u0172\7c\2\2\u0165\u0166")
        buf.write("\7^\2\2\u0166\u0172\7d\2\2\u0167\u0168\7^\2\2\u0168\u0172")
        buf.write("\7h\2\2\u0169\u016a\7^\2\2\u016a\u0172\7p\2\2\u016b\u016c")
        buf.write("\7^\2\2\u016c\u0172\7t\2\2\u016d\u016e\7^\2\2\u016e\u0172")
        buf.write("\7v\2\2\u016f\u0170\7^\2\2\u0170\u0172\7x\2\2\u0171\u015b")
        buf.write("\3\2\2\2\u0171\u015d\3\2\2\2\u0171\u015f\3\2\2\2\u0171")
        buf.write("\u0161\3\2\2\2\u0171\u0163\3\2\2\2\u0171\u0165\3\2\2\2")
        buf.write("\u0171\u0167\3\2\2\2\u0171\u0169\3\2\2\2\u0171\u016b\3")
        buf.write("\2\2\2\u0171\u016d\3\2\2\2\u0171\u016f\3\2\2\2\u0172r")
        buf.write("\3\2\2\2\u0173\u0178\5g\64\2\u0174\u0177\5g\64\2\u0175")
        buf.write("\u0177\5i\65\2\u0176\u0174\3\2\2\2\u0176\u0175\3\2\2\2")
        buf.write("\u0177\u017a\3\2\2\2\u0178\u0176\3\2\2\2\u0178\u0179\3")
        buf.write("\2\2\2\u0179t\3\2\2\2\u017a\u0178\3\2\2\2\u017b\u017e")
        buf.write("\n\7\2\2\u017c\u017e\5q9\2\u017d\u017b\3\2\2\2\u017d\u017c")
        buf.write("\3\2\2\2\u017ev\3\2\2\2\u017f\u0181\5m\67\2\u0180\u017f")
        buf.write("\3\2\2\2\u0180\u0181\3\2\2\2\u0181\u0183\3\2\2\2\u0182")
        buf.write("\u0184\5i\65\2\u0183\u0182\3\2\2\2\u0184\u0185\3\2\2\2")
        buf.write("\u0185\u0183\3\2\2\2\u0185\u0186\3\2\2\2\u0186x\3\2\2")
        buf.write("\2\u0187\u0189\5i\65\2\u0188\u0187\3\2\2\2\u0189\u018c")
        buf.write("\3\2\2\2\u018a\u0188\3\2\2\2\u018a\u018b\3\2\2\2\u018b")
        buf.write("\u018d\3\2\2\2\u018c\u018a\3\2\2\2\u018d\u018f\7\60\2")
        buf.write("\2\u018e\u0190\5i\65\2\u018f\u018e\3\2\2\2\u0190\u0191")
        buf.write("\3\2\2\2\u0191\u018f\3\2\2\2\u0191\u0192\3\2\2\2\u0192")
        buf.write("\u0194\3\2\2\2\u0193\u0195\5o8\2\u0194\u0193\3\2\2\2\u0194")
        buf.write("\u0195\3\2\2\2\u0195\u01a0\3\2\2\2\u0196\u0198\5i\65\2")
        buf.write("\u0197\u0196\3\2\2\2\u0198\u0199\3\2\2\2\u0199\u0197\3")
        buf.write("\2\2\2\u0199\u019a\3\2\2\2\u019a\u019b\3\2\2\2\u019b\u019d")
        buf.write("\7\60\2\2\u019c\u019e\5o8\2\u019d\u019c\3\2\2\2\u019d")
        buf.write("\u019e\3\2\2\2\u019e\u01a0\3\2\2\2\u019f\u018a\3\2\2\2")
        buf.write("\u019f\u0197\3\2\2\2\u01a0z\3\2\2\2\u01a1\u01a2\7)\2\2")
        buf.write("\u01a2\u01a3\5u;\2\u01a3\u01a4\7)\2\2\u01a4|\3\2\2\2\u01a5")
        buf.write("\u01a8\n\b\2\2\u01a6\u01a8\5q9\2\u01a7\u01a5\3\2\2\2\u01a7")
        buf.write("\u01a6\3\2\2\2\u01a8~\3\2\2\2\u01a9\u01ad\7$\2\2\u01aa")
        buf.write("\u01ac\5}?\2\u01ab\u01aa\3\2\2\2\u01ac\u01af\3\2\2\2\u01ad")
        buf.write("\u01ae\3\2\2\2\u01ad\u01ab\3\2\2\2\u01ae\u01b0\3\2\2\2")
        buf.write("\u01af\u01ad\3\2\2\2\u01b0\u01b1\7$\2\2\u01b1\u0080\3")
        buf.write("\2\2\2\u01b2\u01b3\7\61\2\2\u01b3\u01b4\7,\2\2\u01b4\u01b8")
        buf.write("\3\2\2\2\u01b5\u01b7\13\2\2\2\u01b6\u01b5\3\2\2\2\u01b7")
        buf.write("\u01ba\3\2\2\2\u01b8\u01b9\3\2\2\2\u01b8\u01b6\3\2\2\2")
        buf.write("\u01b9\u01bb\3\2\2\2\u01ba\u01b8\3\2\2\2\u01bb\u01bc\7")
        buf.write(",\2\2\u01bc\u01bd\7\61\2\2\u01bd\u01be\3\2\2\2\u01be\u01bf")
        buf.write("\bA\2\2\u01bf\u0082\3\2\2\2\u01c0\u01c1\7\61\2\2\u01c1")
        buf.write("\u01c2\7\61\2\2\u01c2\u01c6\3\2\2\2\u01c3\u01c5\n\t\2")
        buf.write("\2\u01c4\u01c3\3\2\2\2\u01c5\u01c8\3\2\2\2\u01c6\u01c4")
        buf.write("\3\2\2\2\u01c6\u01c7\3\2\2\2\u01c7\u01c9\3\2\2\2\u01c8")
        buf.write("\u01c6\3\2\2\2\u01c9\u01ca\bB\2\2\u01ca\u0084\3\2\2\2")
        buf.write("\u01cb\u01cc\t\n\2\2\u01cc\u01cd\3\2\2\2\u01cd\u01ce\b")
        buf.write("C\2\2\u01ce\u0086\3\2\2\2\u01cf\u01d0\7=\2\2\u01d0\u0088")
        buf.write("\3\2\2\2\25\2\u0154\u0159\u0171\u0176\u0178\u017d\u0180")
        buf.write("\u0185\u018a\u0191\u0194\u0199\u019d\u019f\u01a7\u01ad")
        buf.write("\u01b8\u01c6\3\b\2\2")
        return buf.getvalue()


class CLexer(Lexer):

    atn = ATNDeserializer().deserialize(serializedATN())

    decisionsToDFA = [ DFA(ds, i) for i, ds in enumerate(atn.decisionToState) ]

    T__0 = 1
    T__1 = 2
    T__2 = 3
    T__3 = 4
    T__4 = 5
    T__5 = 6
    T__6 = 7
    T__7 = 8
    T__8 = 9
    T__9 = 10
    T__10 = 11
    T__11 = 12
    T__12 = 13
    T__13 = 14
    T__14 = 15
    T__15 = 16
    T__16 = 17
    T__17 = 18
    T__18 = 19
    T__19 = 20
    T__20 = 21
    T__21 = 22
    T__22 = 23
    T__23 = 24
    T__24 = 25
    T__25 = 26
    T__26 = 27
    T__27 = 28
    T__28 = 29
    T__29 = 30
    T__30 = 31
    T__31 = 32
    T__32 = 33
    IncludeStdIO = 34
    Char = 35
    Int = 36
    Double = 37
    Float = 38
    Void = 39
    If = 40
    Else = 41
    For = 42
    Goto = 43
    While = 44
    Switch = 45
    Break = 46
    Default = 47
    Continue = 48
    Return = 49
    Case = 50
    Identifier = 51
    ConstantInt = 52
    ConstantFloat = 53
    ConstantChar = 54
    StringLiteral = 55
    BlockComment = 56
    LineComment = 57
    WS = 58
    EOS = 59

    channelNames = [ u"DEFAULT_TOKEN_CHANNEL", u"HIDDEN" ]

    modeNames = [ "DEFAULT_MODE" ]

    literalNames = [ "<INVALID>",
            "'('", "')'", "'['", "']'", "','", "'++'", "'--'", "'*'", "'+'", 
            "'-'", "'!'", "'/'", "'%'", "'<'", "'>'", "'<='", "'>='", "'=='", 
            "'!='", "'&&'", "'||'", "'?'", "':'", "'='", "'*='", "'/='", 
            "'%='", "'+='", "'-='", "'...'", "'{'", "'}'", "',}'", "'#include <stdio.h>'", 
            "'char'", "'int'", "'double'", "'float'", "'void'", "'if'", 
            "'else'", "'for'", "'goto'", "'while'", "'switch'", "'break'", 
            "'default'", "'continue'", "'return'", "'case'", "';'" ]

    symbolicNames = [ "<INVALID>",
            "IncludeStdIO", "Char", "Int", "Double", "Float", "Void", "If", 
            "Else", "For", "Goto", "While", "Switch", "Break", "Default", 
            "Continue", "Return", "Case", "Identifier", "ConstantInt", "ConstantFloat", 
            "ConstantChar", "StringLiteral", "BlockComment", "LineComment", 
            "WS", "EOS" ]

    ruleNames = [ "T__0", "T__1", "T__2", "T__3", "T__4", "T__5", "T__6", 
                  "T__7", "T__8", "T__9", "T__10", "T__11", "T__12", "T__13", 
                  "T__14", "T__15", "T__16", "T__17", "T__18", "T__19", 
                  "T__20", "T__21", "T__22", "T__23", "T__24", "T__25", 
                  "T__26", "T__27", "T__28", "T__29", "T__30", "T__31", 
                  "T__32", "IncludeStdIO", "Char", "Int", "Double", "Float", 
                  "Void", "If", "Else", "For", "Goto", "While", "Switch", 
                  "Break", "Default", "Continue", "Return", "Case", "NonDigit", 
                  "Digit", "NonZeroDigit", "Sign", "ExponentPart", "EscapeSequence", 
                  "Identifier", "CChar", "ConstantInt", "ConstantFloat", 
                  "ConstantChar", "SChar", "StringLiteral", "BlockComment", 
                  "LineComment", "WS", "EOS" ]

    grammarFileName = "C.g4"

    def __init__(self, input=None, output:TextIO = sys.stdout):
        super().__init__(input, output)
        self.checkVersion("4.7.2")
        self._interp = LexerATNSimulator(self, self.atn, self.decisionsToDFA, PredictionContextCache())
        self._actions = None
        self._predicates = None


